concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
env:
  BINARY_FILE_NAME: airbyte-ci
  DEV_GCS_BUCKET_NAME: dev-airbyte-cloud-connector-metadata-service
  PROD_GCS_BUCKET_NAME: prod-airbyte-cloud-connector-metadata-service
jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: checkout_airbyte
      name: Checkout Airbyte
      uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      id: get_short_sha
      name: Get short SHA
      uses: benjlevesque/short-sha@v2.2
    - continue-on-error: true
      id: install_python
      name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - continue-on-error: true
      id: install_poetry
      name: Install Poetry
      uses: snok/install-poetry@v1
    - continue-on-error: true
      id: install_dependencies
      name: Install Dependencies
      run: poetry install --with dev
      working-directory: airbyte-ci/connectors/pipelines/
    - continue-on-error: true
      id: build_release
      name: Build release
      run: poetry run poe build-release-binary ${{ env.BINARY_FILE_NAME }}
      working-directory: airbyte-ci/connectors/pipelines/
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: airbyte-ci-${{ matrix.os }}-${{ steps.get_short_sha.outputs.sha }}
        path: airbyte-ci/connectors/pipelines/dist/${{ env.BINARY_FILE_NAME }}
    - continue-on-error: true
      id: auth_dev
      name: Authenticate to Google Cloud Dev
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.METADATA_SERVICE_DEV_GCS_CREDENTIALS }}
    - continue-on-error: true
      id: upload_pre_release_to_gcs
      if: github.ref != 'refs/heads/master'
      name: Upload pre-release to GCS dev bucket
      uses: google-github-actions/upload-cloud-storage@v1
      with:
        destination: ${{ env.DEV_GCS_BUCKET_NAME }}/airbyte-ci/releases/${{ matrix.os
          }}/${{ steps.get_short_sha.outputs.sha }}
        headers: cache-control:public, max-age=10
        path: airbyte-ci/connectors/pipelines/dist/${{ env.BINARY_FILE_NAME }}
    - continue-on-error: true
      id: print_pre_release_public_url
      name: Print pre-release public url
      run: 'echo "https://storage.googleapis.com/${{ env.DEV_GCS_BUCKET_NAME }}/airbyte-ci/releases/${{
        matrix.os }}/${{ steps.get_short_sha.outputs.sha }}/${{ env.BINARY_FILE_NAME
        }}"

        '
    - continue-on-error: true
      id: set_version
      if: github.ref == 'refs/heads/master'
      name: Set version from poetry version --short
      run: 'echo "::set-output name=version::$(poetry version --short)"

        '
      working-directory: airbyte-ci/connectors/pipelines/
    - continue-on-error: true
      id: auth_prod
      name: Authenticate to Google Cloud Prod
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
    - continue-on-error: true
      id: upload_version_release_to_gcs
      if: github.ref == 'refs/heads/master'
      name: Upload version release to GCS prod bucket
      uses: google-github-actions/upload-cloud-storage@v1
      with:
        destination: ${{ env.PROD_GCS_BUCKET_NAME }}/airbyte-ci/releases/${{ matrix.os
          }}/${{ steps.set_version.outputs.version }}
        headers: cache-control:public, max-age=10
        path: airbyte-ci/connectors/pipelines/dist/${{ env.BINARY_FILE_NAME }}
    - continue-on-error: true
      id: print_version_release_public_url
      if: github.ref == 'refs/heads/master'
      name: Print release version public url
      run: 'echo "https://storage.googleapis.com/${{ env.PROD_GCS_BUCKET_NAME }}/airbyte-ci/releases/${{
        matrix.os }}/${{ steps.set_version.outputs.version }}/${{ env.BINARY_FILE_NAME
        }}"

        '
    - continue-on-error: true
      id: upload_latest_release_to_gcs
      if: github.ref == 'refs/heads/master'
      name: Upload latest release to GCS prod bucket
      uses: google-github-actions/upload-cloud-storage@v1
      with:
        destination: ${{ env.PROD_GCS_BUCKET_NAME }}/airbyte-ci/releases/${{ matrix.os
          }}/latest
        headers: cache-control:public, max-age=10
        path: airbyte-ci/connectors/pipelines/dist/${{ env.BINARY_FILE_NAME }}
    - continue-on-error: true
      id: print_latest_release_public_url
      if: github.ref == 'refs/heads/master'
      name: Print latest release public url
      run: 'echo "https://storage.googleapis.com/${{ env.PROD_GCS_BUCKET_NAME }}/airbyte-ci/releases/${{
        matrix.os }}/latest/${{ env.BINARY_FILE_NAME }}"

        '
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu
        - macos
name: Connector Ops CI - Airbyte CI Release
on:
  repository_dispatch:
    types: trigger-ga___airbyte-ci-release.yml
