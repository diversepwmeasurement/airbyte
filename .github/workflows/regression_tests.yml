concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
jobs:
  regression_tests:
    name: Regression Tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Airbyte
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Check PAT rate limits
      run: "./tools/bin/find_non_rate_limited_PAT \\\n  ${{ secrets.GH_PAT_BUILD_RUNNER_OSS\
        \ }} \\\n  ${{ secrets.GH_PAT_BUILD_RUNNER_BACKUP }}\n"
    - continue-on-error: true
      id: extract_branch
      if: github.event_name == 'workflow_dispatch'
      name: Extract branch name [WORKFLOW DISPATCH]
      run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      shell: bash
    - continue-on-error: true
      id: install_poetry
      name: Install Poetry
      uses: snok/install-poetry@v1
    - continue-on-error: true
      id: poetry_venv
      name: Make poetry venv in project
      run: poetry config virtualenvs.in-project true
    - continue-on-error: true
      id: install_python_packages
      name: Install Python packages
      run: poetry install
      working-directory: airbyte-ci/connectors/pipelines
    - continue-on-error: true
      id: fetch_last_commit_id_wd
      if: github.event_name == 'workflow_dispatch'
      name: Fetch last commit id from remote branch [WORKFLOW DISPATCH]
      run: echo "commit_id=$(git rev-parse origin/${{ steps.extract_branch.outputs.branch
        }})" >> $GITHUB_OUTPUT
    - continue-on-error: true
      if: github.event_name == 'workflow_dispatch'
      name: Setup Stream Parameters
      run: "if [ -z \"${{ github.event.inputs.streams }}\" ]; then\n  echo \"STREAM_PARAMS=\"\
        \ >> $GITHUB_ENV\nelse\n  STREAMS=$(echo \"${{ github.event.inputs.streams\
        \ }}\" | sed 's/,/ --connector_live_tests.selected-streams=/g')\n  echo \"\
        STREAM_PARAMS=--connector_live_tests.selected-streams=$STREAMS\" >> $GITHUB_ENV\n\
        fi\n"
    - continue-on-error: true
      if: github.event_name == 'workflow_dispatch'
      name: Setup Local CDK Flag
      run: "if ${{ github.event.inputs.use_local_cdk }}; then\n  echo \"USE_LOCAL_CDK_FLAG=--use-local-cdk\"\
        \ >> $GITHUB_ENV\nelse\n  echo \"USE_LOCAL_CDK_FLAG=\" >> $GITHUB_ENV\nfi\n"
    - continue-on-error: true
      if: github.event_name == 'workflow_dispatch'
      name: Run Regression Tests [WORKFLOW DISPATCH]
      uses: ./.github/actions/run-airbyte-ci
      with:
        context: manual
        docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
        gcp_gsm_credentials: ${{ secrets.GCP_GSM_CREDENTIALS }}
        gcp_integration_tester_credentials: ${{ secrets.GCLOUD_INTEGRATION_TESTER
          }}
        git_branch: ${{ steps.extract_branch.outputs.branch }}
        git_revision: ${{ steps.fetch_last_commit_id_pr.outputs.commit_id }}
        github_token: ${{ secrets.GH_PAT_MAINTENANCE_OSS }}
        s3_build_cache_access_key_id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
        s3_build_cache_secret_key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
        sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
        subcommand: connectors ${{ env.USE_LOCAL_CDK_FLAG }} --name ${{ github.event.inputs.connector_name
          }} test --only-step connector_live_tests --connector_live_tests.test-suite=regression
          --connector_live_tests.connection-id=${{ github.event.inputs.connection_id
          }} --connector_live_tests.pr-url=${{ github.event.inputs.pr_url }} ${{ env.STREAM_PARAMS
          }}
    timeout-minutes: 360
name: Connector Ops CI - Run Regression Tests
on:
  repository_dispatch:
    types: trigger-ga___regression_tests.yml
