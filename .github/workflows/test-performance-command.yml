jobs:
  performance-test:
    needs: start-test-runner
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: regex
      name: Search for valid connector name format
      uses: AsasInnab/regex-action@v1
      with:
        regex_flags: i
        regex_pattern: ^((connectors|bases)/)?[a-zA-Z0-9-_]+$
        search_string: ${{ github.event.inputs.connector }}
    - continue-on-error: true
      if: steps.regex.outputs.first_match != github.event.inputs.connector
      name: Validate input workflow format
      run: echo "The connector provided has an invalid format!" && exit 1
    - continue-on-error: true
      if: github.event.inputs.comment-id
      name: Link comment to workflow run
      uses: peter-evans/create-or-update-comment@v1
      with:
        body: '> :clock2: ${{github.event.inputs.connector}} https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

          '
        comment-id: ${{ github.event.inputs.comment-id }}
    - continue-on-error: true
      name: Checkout Airbyte
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.gitref }}
        repository: ${{ github.event.inputs.repo }}
    - continue-on-error: true
      name: Install Java
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: '21'
    - continue-on-error: true
      name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - continue-on-error: true
      name: Install CI scripts
      run: 'pip install pipx

        pipx ensurepath

        pipx install airbyte-ci/connectors/ci_credentials

        '
    - continue-on-error: true
      env:
        GCP_GSM_CREDENTIALS: ${{ secrets.GCP_GSM_CREDENTIALS }}
      name: Write Integration Test Credentials for ${{ github.event.inputs.connector
        }}
      run: "ci_credentials ${{ github.event.inputs.connector }} write-to-storage\n\
        # normalization also runs destination-specific tests, so fetch their creds\
        \ also\nif [ 'bases/base-normalization' = \"${{ github.event.inputs.connector\
        \ }}\" ] || [ 'base-normalization' = \"${{ github.event.inputs.connector }}\"\
        \ ]; then\n  ci_credentials destination-bigquery write-to-storage\n  ci_credentials\
        \ destination-postgres write-to-storage\n  ci_credentials destination-snowflake\
        \ write-to-storage\nfi\n"
    - continue-on-error: true
      env:
        ACTION_RUN_ID: ${{github.run_id}}
        TZ: UTC
      id: test_performance
      name: test_performance ${{ github.event.inputs.connector }}
      run: './tools/bin/ci_performance_test.sh ${{ github.event.inputs.connector }}
        ${{ github.event.inputs.cpulimit }} ${{ github.event.inputs.memorylimit }}

        '
    - continue-on-error: true
      env:
        GCP_GSM_CREDENTIALS: ${{ secrets.GCP_GSM_CREDENTIALS }}
      if: always()
      name: Update Integration Test Credentials after test run for ${{ github.event.inputs.connector
        }}
      run: "ci_credentials ${{ github.event.inputs.connector }} update-secrets\n#\
        \ normalization also runs destination-specific tests, so fetch their creds\
        \ also\nif [ 'bases/base-normalization' = \"${{ github.event.inputs.connector\
        \ }}\" ] || [ 'base-normalization' = \"${{ github.event.inputs.connector }}\"\
        \ ]; then\n  ci_credentials destination-bigquery update-secrets\n  ci_credentials\
        \ destination-postgres update-secrets\n  ci_credentials destination-snowflake\
        \ update-secrets\nfi\n"
    - continue-on-error: true
      if: github.event.inputs.comment-id && failure()
      name: Archive test reports artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: '**/${{ github.event.inputs.connector }}/build/reports/tests/**/**

          **/${{ github.event.inputs.connector }}/acceptance_tests_logs/**

          **/normalization_test_output/**/dbt_output.log

          **/normalization_test_output/**/destination_output.log

          **/normalization_test_output/**/build/compiled/airbyte_utils/**

          **/normalization_test_output/**/build/run/airbyte_utils/**

          **/normalization_test_output/**/models/generated/**

          '
    - continue-on-error: true
      if: github.event.inputs.comment-id && success()
      name: Test coverage reports artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: '**/${{ github.event.inputs.connector }}/htmlcov/**

          '
        retention-days: 3
    - continue-on-error: true
      if: github.event.inputs.comment-id && success()
      name: Add Success Comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        body: '> :white_check_mark: ${{github.event.inputs.connector}} https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

          ${{env.PYTHON_UNITTEST_COVERAGE_REPORT}}

          '
        comment-id: ${{ github.event.inputs.comment-id }}
    - continue-on-error: true
      if: github.event.inputs.comment-id && failure()
      name: Add Failure Comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        body: '> :x: ${{github.event.inputs.connector}} https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

          > :bug: ${{env.GRADLE_SCAN_LINK}}

          '
        comment-id: ${{ github.event.inputs.comment-id }}
    timeout-minutes: 240
  start-test-runner:
    name: Start Build EC2 Runner
    outputs:
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
      label: ${{ steps.start-ec2-runner.outputs.label }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Airbyte
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.gitref }}
        repository: ${{ github.event.inputs.repo }}
    - continue-on-error: true
      name: Check PAT rate limits
      run: "./tools/bin/find_non_rate_limited_PAT \\\n  ${{ secrets.GH_PAT_BUILD_RUNNER_OSS\
        \ }} \\\n  ${{ secrets.GH_PAT_BUILD_RUNNER_BACKUP }}\n"
    - continue-on-error: true
      id: start-ec2-runner
      name: Start AWS Runner
      uses: ./.github/actions/start-aws-runner
      with:
        aws-access-key-id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
        ec2-image-id: ami-06cf12549e3d9c522
        github-token: ${{ env.PAT }}
    timeout-minutes: 10
  stop-test-runner:
    if: ${{ always() }}
    name: Stop Build EC2 Runner
    needs:
    - start-test-runner
    - performance-test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
    - continue-on-error: true
      name: Checkout Airbyte
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Check PAT rate limits
      run: "./tools/bin/find_non_rate_limited_PAT \\\n  ${{ secrets.GH_PAT_BUILD_RUNNER_OSS\
        \ }} \\\n  ${{ secrets.GH_PAT_BUILD_RUNNER_BACKUP }}\n"
    - continue-on-error: true
      name: Stop EC2 runner
      uses: supertopher/ec2-github-runner@base64v1.0.10
      with:
        ec2-instance-id: ${{ needs.start-test-runner.outputs.ec2-instance-id }}
        github-token: ${{ env.PAT }}
        label: ${{ needs.start-test-runner.outputs.label }}
        mode: stop
    timeout-minutes: 10
name: Run Connectors Performance Test
on:
  repository_dispatch:
    types: trigger-ga___test-performance-command.yml
