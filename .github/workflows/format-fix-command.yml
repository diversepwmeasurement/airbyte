concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.inputs.pr }}
jobs:
  format-fix:
    name: Run airbyte-ci format fix all
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: job-vars
      name: Get job variables
      run: 'PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.inputs.pr
        }})

        echo "repo=$(echo "$PR_JSON" | jq -r .head.repo.full_name)" >> $GITHUB_OUTPUT

        echo "branch=$(echo "$PR_JSON" | jq -r .head.ref)" >> $GITHUB_OUTPUT

        echo "run-url=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
        >> $GITHUB_OUTPUT

        '
      shell: bash
    - continue-on-error: true
      name: Checkout Airbyte
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        ref: ${{ steps.job-vars.outputs.branch }}
        repository: ${{ steps.job-vars.outputs.repo }}
        token: ${{ secrets.GH_PAT_APPROVINGTON_OCTAVIA }}
    - continue-on-error: true
      id: first-comment-action
      name: Append comment with job run link
      uses: peter-evans/create-or-update-comment@v4
      with:
        body: '

          > Format-fix job started... [Check job output.][1]


          [1]: ${{ steps.job-vars.outputs.run-url }}

          '
        comment-id: ${{ github.event.inputs.comment-id }}
        issue-number: ${{ github.event.inputs.pr }}
    - continue-on-error: true
      name: Run airbyte-ci format fix all
      uses: ./.github/actions/run-airbyte-ci
      with:
        context: manual
        gcs_credentials: ${{ secrets.METADATA_SERVICE_PROD_GCS_CREDENTIALS }}
        github_token: ${{ secrets.GH_PAT_MAINTENANCE_OCTAVIA }}
        sentry_dsn: ${{ secrets.SENTRY_AIRBYTE_CI_DSN }}
        subcommand: format fix all
    - continue-on-error: true
      name: Remove any files that have been gitignored
      run: git ls-files -i -c --exclude-from=.gitignore | xargs -r git rm --cached
    - continue-on-error: true
      id: git-diff
      name: Check for changes
      run: 'git diff --quiet && echo "No changes to commit" || echo "::set-output
        name=changes::true"

        '
      shell: bash
    - continue-on-error: true
      id: commit-step
      if: steps.git-diff.outputs.changes == 'true'
      name: Commit changes
      run: 'git config --global user.name "Octavia Squidington III"

        git config --global user.email "octavia-squidington-iii@users.noreply.github.com"

        git add .

        git commit -m "chore: auto-fix lint and format issues"

        echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      if: steps.git-diff.outputs.changes == 'true'
      name: Push changes to '(${{ steps.job-vars.outputs.repo }})'
      run: 'git remote add contributor https://github.com/${{ steps.job-vars.outputs.repo
        }}.git

        git push contributor HEAD:${{ steps.job-vars.outputs.branch }}

        '
    - continue-on-error: true
      if: steps.git-diff.outputs.changes == 'true'
      name: Append success comment
      uses: peter-evans/create-or-update-comment@v4
      with:
        body: "> \u2705 Changes applied successfully. (${{ steps.commit-step.outputs.sha\
          \ }})\n"
        comment-id: ${{ steps.first-comment-action.outputs.comment-id }}
        reactions: hooray
    - continue-on-error: true
      if: steps.git-diff.outputs.changes != 'true'
      name: Append success comment (no-op)
      uses: peter-evans/create-or-update-comment@v4
      with:
        body: "> \U0001F7E6 Job completed successfully (no changes).\n"
        comment-id: ${{ steps.first-comment-action.outputs.comment-id }}
        reactions: '+1'
    - continue-on-error: true
      if: failure()
      name: Append failure comment
      uses: peter-evans/create-or-update-comment@v4
      with:
        body: "> \u274C Job failed.\n"
        comment-id: ${{ steps.first-comment-action.outputs.comment-id }}
        reactions: confused
name: Fix formatting on a PR
on:
  repository_dispatch:
    types: trigger-ga___format-fix-command.yml
run-name: 'Fix formatting on PR #${{ github.event.inputs.pr }}'
